# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Build Idempiere For Rubber

# https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions#on
on:
  push:
    branches: [ rubber ]
  pull_request:
    branches: [ rubber ]

jobs:
  build:

    runs-on: ubuntu-latest
    
    # https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idsteps
    steps:
    # uses: https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idstepsuses
    
    # https://github.com/actions/checkout
    - name: Checkout idempiere
      uses: actions/checkout@v2
      with:
        path: idempiere
    
    - name: Create folder for customize plugins
      # ERROR: working-directory: $GITHUB_WORKSPACE it make build fail with error "No such file or directory"
      run: mkdir $GITHUB_WORKSPACE/project.extra.bundle
      
    - name: Checkout plugin th.motive.jasper.report.font
      uses: actions/checkout@v2
      with:
        repository: hieplq/th.motive.jasper.report.font
        path: project.extra.bundle/th.motive.jasper.report.font
    
    - name: Checkout plugin th.motive.idempiere.info.print
      uses: actions/checkout@v2
      with:
        repository: hieplq/th.motive.idempiere.info.print
        path: project.extra.bundle/th.motive.idempiere.info.print

    # run shell: https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idstepsrun
    # Append maven stuff to build include plugins
    - name: Prepare plugin for maven
      run: |
        cat << "EOT" > $GITHUB_WORKSPACE/project.extra.bundle/pom.xml
          <project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
            xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
            <modelVersion>4.0.0</modelVersion>
            <groupId>org.idempiere</groupId>
            <version>7.1.0-SNAPSHOT</version>
            <artifactId>th.rubber.customize.bundle</artifactId>
            <packaging>pom</packaging>

            <modules>
              <module>th.motive.idempiere.info.print</module>
              <module>th.motive.jasper.report.font</module>
            </modules>
          </project>
        EOT
        
        sed -i -r "s|(^\s*</modules>)|<module>../project.extra.bundle</module>\n\1|g" $GITHUB_WORKSPACE/idempiere/pom.xml
        sed -i -r 's|(^\s*</feature>)|   <plugin\n         id="th.motive.idempiere.info.print"\n         download-size="0"\n         install-size="0"\n         version="0.0.0"\n         unpack="false"/>\n\1|g' $GITHUB_WORKSPACE/idempiere/org.adempiere.server-feature/feature.xml
        sed -i -r 's|(^\s*</feature>)|   <plugin\n         id="th.motive.jasper.report.font"\n         fragment="true"\n         download-size="0"\n         install-size="0"\n         version="0.0.0"\n         unpack="false"/>\n\1|g' $GITHUB_WORKSPACE/idempiere/org.adempiere.server-feature/feature.xml
    
    # https://github.com/marketplace/actions/setup-java-jdk
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11
    
    - name: Build with Maven
      run: |
        cd $GITHUB_WORKSPACE/idempiere/org.idempiere.parent
        mvn install
        cd $GITHUB_WORKSPACE/idempiere
        mvn verify
        jar cfM $GITHUB_WORKSPACE/idempiereServerRubber.gtk.linux.x86_64.jar -C $GITHUB_WORKSPACE/idempiere/org.idempiere.p2/target/products/org.adempiere.server.product/linux/gtk x86_64

    # https://www.github.com/actions/create-release
    # https://github.com/actions/upload-release-asset
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}${{ github.run_id }}
        # https://help.github.com/en/actions/reference/context-and-expression-syntax-for-github-actions#github-context
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./idempiereServerRubber.gtk.linux.x86_64.jar
        asset_name: idempiereServerRubber.gtk.linux.x86_64.jar
        asset_content_type: application/jar
